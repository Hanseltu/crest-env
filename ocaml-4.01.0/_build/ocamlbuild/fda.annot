"ocamlbuild/fda.ml" 24 922 926 "ocamlbuild/fda.ml" 24 922 930
type(
  Hygiene.law list
)
ident(
  def laws "ocamlbuild/fda.ml" 46 1799 1799 "ocamlbuild/fda.ml" 1 0 -1
)
"ocamlbuild/fda.ml" 26 937 954 "ocamlbuild/fda.ml" 26 937 988
type(
  string
)
"ocamlbuild/fda.ml" 27 990 1013 "ocamlbuild/fda.ml" 27 990 1019
type(
  Hygiene.pattern
)
"ocamlbuild/fda.ml" 27 990 1009 "ocamlbuild/fda.ml" 27 990 1019
type(
  Hygiene.rule
)
"ocamlbuild/fda.ml" 27 990 1025 "ocamlbuild/fda.ml" 27 990 1031
type(
  Hygiene.pattern
)
"ocamlbuild/fda.ml" 27 990 1021 "ocamlbuild/fda.ml" 27 990 1031
type(
  Hygiene.rule
)
"ocamlbuild/fda.ml" 27 990 1037 "ocamlbuild/fda.ml" 27 990 1043
type(
  Hygiene.pattern
)
"ocamlbuild/fda.ml" 27 990 1033 "ocamlbuild/fda.ml" 27 990 1043
type(
  Hygiene.rule
)
"ocamlbuild/fda.ml" 27 990 1049 "ocamlbuild/fda.ml" 27 990 1055
type(
  Hygiene.pattern
)
"ocamlbuild/fda.ml" 27 990 1045 "ocamlbuild/fda.ml" 27 990 1055
type(
  Hygiene.rule
)
"ocamlbuild/fda.ml" 27 990 1061 "ocamlbuild/fda.ml" 27 990 1068
type(
  Hygiene.pattern
)
"ocamlbuild/fda.ml" 27 990 1057 "ocamlbuild/fda.ml" 27 990 1068
type(
  Hygiene.rule
)
"ocamlbuild/fda.ml" 27 990 1008 "ocamlbuild/fda.ml" 27 990 1069
type(
  Hygiene.rule list
)
"ocamlbuild/fda.ml" 28 1071 1091 "ocamlbuild/fda.ml" 28 1071 1095
type(
  Hygiene.penalty
)
"ocamlbuild/fda.ml" 26 937 941 "ocamlbuild/fda.ml" 28 1071 1097
type(
  Hygiene.law
)
"ocamlbuild/fda.ml" 29 1099 1116 "ocamlbuild/fda.ml" 29 1099 1154
type(
  string
)
"ocamlbuild/fda.ml" 30 1156 1179 "ocamlbuild/fda.ml" 30 1156 1187
type(
  Hygiene.pattern
)
"ocamlbuild/fda.ml" 30 1156 1175 "ocamlbuild/fda.ml" 30 1156 1187
type(
  Hygiene.rule
)
"ocamlbuild/fda.ml" 30 1156 1174 "ocamlbuild/fda.ml" 30 1156 1188
type(
  Hygiene.rule list
)
"ocamlbuild/fda.ml" 31 1190 1210 "ocamlbuild/fda.ml" 31 1190 1214
type(
  Hygiene.penalty
)
"ocamlbuild/fda.ml" 29 1099 1103 "ocamlbuild/fda.ml" 31 1190 1216
type(
  Hygiene.law
)
"ocamlbuild/fda.ml" 32 1218 1235 "ocamlbuild/fda.ml" 32 1218 1258
type(
  string
)
"ocamlbuild/fda.ml" 33 1260 1283 "ocamlbuild/fda.ml" 33 1260 1287
type(
  Hygiene.pattern
)
"ocamlbuild/fda.ml" 33 1260 1279 "ocamlbuild/fda.ml" 33 1260 1287
type(
  Hygiene.rule
)
"ocamlbuild/fda.ml" 33 1260 1293 "ocamlbuild/fda.ml" 33 1260 1297
type(
  Hygiene.pattern
)
"ocamlbuild/fda.ml" 33 1260 1289 "ocamlbuild/fda.ml" 33 1260 1297
type(
  Hygiene.rule
)
"ocamlbuild/fda.ml" 33 1260 1303 "ocamlbuild/fda.ml" 33 1260 1308
type(
  Hygiene.pattern
)
"ocamlbuild/fda.ml" 33 1260 1299 "ocamlbuild/fda.ml" 33 1260 1308
type(
  Hygiene.rule
)
"ocamlbuild/fda.ml" 33 1260 1314 "ocamlbuild/fda.ml" 33 1260 1320
type(
  Hygiene.pattern
)
"ocamlbuild/fda.ml" 33 1260 1310 "ocamlbuild/fda.ml" 33 1260 1320
type(
  Hygiene.rule
)
"ocamlbuild/fda.ml" 33 1260 1326 "ocamlbuild/fda.ml" 33 1260 1332
type(
  Hygiene.pattern
)
"ocamlbuild/fda.ml" 33 1260 1322 "ocamlbuild/fda.ml" 33 1260 1332
type(
  Hygiene.rule
)
"ocamlbuild/fda.ml" 33 1260 1338 "ocamlbuild/fda.ml" 33 1260 1344
type(
  Hygiene.pattern
)
"ocamlbuild/fda.ml" 33 1260 1334 "ocamlbuild/fda.ml" 33 1260 1344
type(
  Hygiene.rule
)
"ocamlbuild/fda.ml" 33 1260 1278 "ocamlbuild/fda.ml" 33 1260 1345
type(
  Hygiene.rule list
)
"ocamlbuild/fda.ml" 34 1347 1367 "ocamlbuild/fda.ml" 34 1347 1371
type(
  Hygiene.penalty
)
"ocamlbuild/fda.ml" 32 1218 1222 "ocamlbuild/fda.ml" 34 1347 1373
type(
  Hygiene.law
)
"ocamlbuild/fda.ml" 35 1375 1392 "ocamlbuild/fda.ml" 35 1375 1428
type(
  string
)
"ocamlbuild/fda.ml" 36 1430 1461 "ocamlbuild/fda.ml" 36 1430 1467
type(
  Hygiene.pattern
)
"ocamlbuild/fda.ml" 36 1430 1468 "ocamlbuild/fda.ml" 36 1430 1473
type(
  Hygiene.pattern
)
"ocamlbuild/fda.ml" 36 1430 1449 "ocamlbuild/fda.ml" 36 1430 1474
type(
  Hygiene.rule
)
"ocamlbuild/fda.ml" 36 1430 1488 "ocamlbuild/fda.ml" 36 1430 1494
type(
  Hygiene.pattern
)
"ocamlbuild/fda.ml" 36 1430 1495 "ocamlbuild/fda.ml" 36 1430 1501
type(
  Hygiene.pattern
)
"ocamlbuild/fda.ml" 36 1430 1476 "ocamlbuild/fda.ml" 36 1430 1502
type(
  Hygiene.rule
)
"ocamlbuild/fda.ml" 36 1430 1448 "ocamlbuild/fda.ml" 36 1430 1503
type(
  Hygiene.rule list
)
"ocamlbuild/fda.ml" 37 1505 1525 "ocamlbuild/fda.ml" 37 1505 1529
type(
  Hygiene.penalty
)
"ocamlbuild/fda.ml" 35 1375 1379 "ocamlbuild/fda.ml" 37 1505 1531
type(
  Hygiene.law
)
"ocamlbuild/fda.ml" 38 1533 1550 "ocamlbuild/fda.ml" 38 1533 1585
type(
  string
)
"ocamlbuild/fda.ml" 39 1587 1618 "ocamlbuild/fda.ml" 39 1587 1624
type(
  Hygiene.pattern
)
"ocamlbuild/fda.ml" 39 1587 1625 "ocamlbuild/fda.ml" 39 1587 1630
type(
  Hygiene.pattern
)
"ocamlbuild/fda.ml" 39 1587 1606 "ocamlbuild/fda.ml" 39 1587 1631
type(
  Hygiene.rule
)
"ocamlbuild/fda.ml" 39 1587 1605 "ocamlbuild/fda.ml" 39 1587 1632
type(
  Hygiene.rule list
)
"ocamlbuild/fda.ml" 40 1634 1654 "ocamlbuild/fda.ml" 40 1634 1658
type(
  Hygiene.penalty
)
"ocamlbuild/fda.ml" 38 1533 1537 "ocamlbuild/fda.ml" 40 1634 1660
type(
  Hygiene.law
)
"ocamlbuild/fda.ml" 41 1662 1679 "ocamlbuild/fda.ml" 41 1662 1706
type(
  string
)
"ocamlbuild/fda.ml" 42 1708 1731 "ocamlbuild/fda.ml" 42 1708 1744
type(
  Hygiene.pattern
)
"ocamlbuild/fda.ml" 42 1708 1727 "ocamlbuild/fda.ml" 42 1708 1744
type(
  Hygiene.rule
)
"ocamlbuild/fda.ml" 42 1708 1750 "ocamlbuild/fda.ml" 42 1708 1764
type(
  Hygiene.pattern
)
"ocamlbuild/fda.ml" 42 1708 1746 "ocamlbuild/fda.ml" 42 1708 1764
type(
  Hygiene.rule
)
"ocamlbuild/fda.ml" 42 1708 1726 "ocamlbuild/fda.ml" 42 1708 1765
type(
  Hygiene.rule list
)
"ocamlbuild/fda.ml" 43 1767 1787 "ocamlbuild/fda.ml" 43 1767 1791
type(
  Hygiene.penalty
)
"ocamlbuild/fda.ml" 41 1662 1666 "ocamlbuild/fda.ml" 43 1767 1793
type(
  Hygiene.law
)
"ocamlbuild/fda.ml" 25 933 935 "ocamlbuild/fda.ml" 44 1794 1797
type(
  Hygiene.law list
)
"ocamlbuild/fda.ml" 46 1799 1803 "ocamlbuild/fda.ml" 46 1799 1810
type(
  bool Slurp.entry -> unit
)
ident(
  def inspect "ocamlbuild/fda.ml" 81 2688 2732 "ocamlbuild/fda.ml" 1 0 -1
)
"ocamlbuild/fda.ml" 46 1799 1811 "ocamlbuild/fda.ml" 46 1799 1816
type(
  bool Slurp.entry
)
ident(
  def entry "ocamlbuild/fda.ml" 47 1819 1821 "ocamlbuild/fda.ml" 81 2688 2732
)
"ocamlbuild/fda.ml" 47 1819 1821 "ocamlbuild/fda.ml" 47 1819 1828
type(
  int -> (unit, Format.formatter, unit) format -> unit
)
ident(
  ext_ref Log.dprintf
)
"ocamlbuild/fda.ml" 47 1819 1829 "ocamlbuild/fda.ml" 47 1819 1830
type(
  int
)
"ocamlbuild/fda.ml" 47 1819 1831 "ocamlbuild/fda.ml" 47 1819 1852
type(
  (unit, Format.formatter, unit) format
)
"ocamlbuild/fda.ml" 47 1819 1821 "ocamlbuild/fda.ml" 47 1819 1852
call(
  stack
)
type(
  unit
)
"ocamlbuild/fda.ml" 48 1854 1860 "ocamlbuild/fda.ml" 48 1854 1864
type(
  bool ref
)
ident(
  def evil "ocamlbuild/fda.ml" 49 1880 1882 "ocamlbuild/fda.ml" 81 2688 2732
)
"ocamlbuild/fda.ml" 48 1854 1867 "ocamlbuild/fda.ml" 48 1854 1870
type(
  bool -> bool ref
)
ident(
  ext_ref Pervasives.ref
)
"ocamlbuild/fda.ml" 48 1854 1871 "ocamlbuild/fda.ml" 48 1854 1876
type(
  bool
)
"ocamlbuild/fda.ml" 48 1854 1867 "ocamlbuild/fda.ml" 48 1854 1876
type(
  bool ref
)
"ocamlbuild/fda.ml" 49 1880 1888 "ocamlbuild/fda.ml" 49 1880 1901
type(
  ?sanitize:Pathname.t ->
  Hygiene.law list -> bool Slurp.entry -> (Hygiene.law * string list) list
)
ident(
  ext_ref Hygiene.check
)
"ocamlbuild/fda.ml" 52 1929 1940 "ocamlbuild/fda.ml" 52 1929 1941
type(
  bool ref -> bool
)
ident(
  ext_ref Pervasives.( ! )
)
"ocamlbuild/fda.ml" 52 1929 1941 "ocamlbuild/fda.ml" 52 1929 1957
type(
  bool ref
)
ident(
  ext_ref Options.sanitize
)
"ocamlbuild/fda.ml" 52 1929 1940 "ocamlbuild/fda.ml" 52 1929 1957
type(
  bool
)
"ocamlbuild/fda.ml" 53 1963 1978 "ocamlbuild/fda.ml" 53 1963 1993
type(
  Pathname.t -> Pathname.t -> Pathname.t
)
ident(
  ext_ref Pathname.concat
)
"ocamlbuild/fda.ml" 53 1963 1994 "ocamlbuild/fda.ml" 53 1963 1995
type(
  Pathname.t ref -> Pathname.t
)
ident(
  ext_ref Pervasives.( ! )
)
"ocamlbuild/fda.ml" 53 1963 1995 "ocamlbuild/fda.ml" 53 1963 2012
type(
  Pathname.t ref
)
ident(
  ext_ref Options.build_dir
)
"ocamlbuild/fda.ml" 53 1963 1994 "ocamlbuild/fda.ml" 53 1963 2012
type(
  Pathname.t
)
"ocamlbuild/fda.ml" 53 1963 2013 "ocamlbuild/fda.ml" 53 1963 2014
type(
  Pathname.t ref -> Pathname.t
)
ident(
  ext_ref Pervasives.( ! )
)
"ocamlbuild/fda.ml" 53 1963 2014 "ocamlbuild/fda.ml" 53 1963 2041
type(
  Pathname.t ref
)
ident(
  ext_ref Options.sanitization_script
)
"ocamlbuild/fda.ml" 53 1963 2013 "ocamlbuild/fda.ml" 53 1963 2041
type(
  Pathname.t
)
"ocamlbuild/fda.ml" 53 1963 1977 "ocamlbuild/fda.ml" 53 1963 2042
call(
  stack
)
type(
  Pathname.t
)
"ocamlbuild/fda.ml" 53 1963 1973 "ocamlbuild/fda.ml" 53 1963 2042
type(
  Pathname.t option
)
"ocamlbuild/fda.ml" 55 2056 2066 "ocamlbuild/fda.ml" 55 2056 2070
type(
  Pathname.t option
)
"ocamlbuild/fda.ml" 51 1917 1923 "ocamlbuild/fda.ml" 56 2071 2080
type(
  Pathname.t option
)
"ocamlbuild/fda.ml" 57 2081 2087 "ocamlbuild/fda.ml" 57 2081 2091
type(
  Hygiene.law list
)
ident(
  int_ref laws "ocamlbuild/fda.ml" 24 922 926 "ocamlbuild/fda.ml" 24 922 930
)
"ocamlbuild/fda.ml" 57 2081 2092 "ocamlbuild/fda.ml" 57 2081 2097
type(
  bool Slurp.entry
)
ident(
  int_ref entry "ocamlbuild/fda.ml" 46 1799 1811 "ocamlbuild/fda.ml" 46 1799 1816
)
"ocamlbuild/fda.ml" 49 1880 1888 "ocamlbuild/fda.ml" 57 2081 2097
call(
  stack
)
type(
  (Hygiene.law * string list) list
)
"ocamlbuild/fda.ml" 59 2105 2109 "ocamlbuild/fda.ml" 59 2105 2111
type(
  (Hygiene.law * string list) list
)
"ocamlbuild/fda.ml" 59 2105 2115 "ocamlbuild/fda.ml" 59 2105 2117
type(
  unit
)
"ocamlbuild/fda.ml" 60 2118 2122 "ocamlbuild/fda.ml" 60 2118 2127
type(
  (Hygiene.law * string list) list
)
ident(
  def stuff "ocamlbuild/fda.ml" 61 2131 2135 "ocamlbuild/fda.ml" 81 2688 2732
)
"ocamlbuild/fda.ml" 61 2131 2135 "ocamlbuild/fda.ml" 61 2131 2144
type(
  (Hygiene.law * string list -> unit) ->
  (Hygiene.law * string list) list -> unit
)
ident(
  ext_ref List.iter
)
"ocamlbuild/fda.ml" 62 2145 2162 "ocamlbuild/fda.ml" 62 2145 2165
type(
  Hygiene.law
)
ident(
  def law "ocamlbuild/fda.ml" 63 2176 2184 "ocamlbuild/fda.ml" 78 2650 2664
)
"ocamlbuild/fda.ml" 62 2145 2167 "ocamlbuild/fda.ml" 62 2145 2171
type(
  string list
)
ident(
  def msgs "ocamlbuild/fda.ml" 63 2176 2184 "ocamlbuild/fda.ml" 78 2650 2664
)
"ocamlbuild/fda.ml" 62 2145 2161 "ocamlbuild/fda.ml" 62 2145 2172
type(
  Hygiene.law * string list
)
"ocamlbuild/fda.ml" 63 2176 2184 "ocamlbuild/fda.ml" 63 2176 2197
type(
  (string -> string -> unit, out_channel, unit) format ->
  string -> string -> unit
)
ident(
  ext_ref Printf.printf
)
"ocamlbuild/fda.ml" 63 2176 2198 "ocamlbuild/fda.ml" 63 2176 2209
type(
  (string -> string -> unit, out_channel, unit) format
)
"ocamlbuild/fda.ml" 64 2210 2227 "ocamlbuild/fda.ml" 64 2210 2230
type(
  Hygiene.law
)
ident(
  int_ref law "ocamlbuild/fda.ml" 62 2145 2162 "ocamlbuild/fda.ml" 62 2145 2165
)
"ocamlbuild/fda.ml" 64 2210 2227 "ocamlbuild/fda.ml" 64 2210 2242
type(
  Hygiene.penalty
)
"ocamlbuild/fda.ml" 65 2248 2261 "ocamlbuild/fda.ml" 65 2248 2265
type(
  Hygiene.penalty
)
"ocamlbuild/fda.ml" 65 2248 2269 "ocamlbuild/fda.ml" 65 2248 2278
type(
  string
)
"ocamlbuild/fda.ml" 66 2279 2292 "ocamlbuild/fda.ml" 66 2279 2296
type(
  Hygiene.penalty
)
"ocamlbuild/fda.ml" 67 2300 2318 "ocamlbuild/fda.ml" 67 2300 2321
type(
  bool -> bool
)
ident(
  ext_ref Pervasives.not
)
"ocamlbuild/fda.ml" 67 2300 2322 "ocamlbuild/fda.ml" 67 2300 2323
type(
  bool ref -> bool
)
ident(
  ext_ref Pervasives.( ! )
)
"ocamlbuild/fda.ml" 67 2300 2323 "ocamlbuild/fda.ml" 67 2300 2327
type(
  bool ref
)
ident(
  int_ref evil "ocamlbuild/fda.ml" 48 1854 1860 "ocamlbuild/fda.ml" 48 1854 1864
)
"ocamlbuild/fda.ml" 67 2300 2322 "ocamlbuild/fda.ml" 67 2300 2327
type(
  bool
)
"ocamlbuild/fda.ml" 67 2300 2318 "ocamlbuild/fda.ml" 67 2300 2327
type(
  bool
)
"ocamlbuild/fda.ml" 69 2356 2375 "ocamlbuild/fda.ml" 69 2356 2388
type(
  (unit, out_channel, unit) format -> unit
)
ident(
  ext_ref Printf.printf
)
"ocamlbuild/fda.ml" 69 2356 2389 "ocamlbuild/fda.ml" 69 2356 2449
type(
  (unit, out_channel, unit) format
)
"ocamlbuild/fda.ml" 69 2356 2375 "ocamlbuild/fda.ml" 69 2356 2449
call(
  stack
)
type(
  unit
)
"ocamlbuild/fda.ml" 70 2451 2470 "ocamlbuild/fda.ml" 70 2451 2474
type(
  bool ref
)
ident(
  int_ref evil "ocamlbuild/fda.ml" 48 1854 1860 "ocamlbuild/fda.ml" 48 1854 1864
)
"ocamlbuild/fda.ml" 70 2451 2475 "ocamlbuild/fda.ml" 70 2451 2477
type(
  bool ref -> bool -> unit
)
ident(
  ext_ref Pervasives.( := )
)
"ocamlbuild/fda.ml" 70 2451 2478 "ocamlbuild/fda.ml" 70 2451 2482
type(
  bool
)
"ocamlbuild/fda.ml" 70 2451 2470 "ocamlbuild/fda.ml" 70 2451 2482
type(
  unit
)
"ocamlbuild/fda.ml" 68 2333 2350 "ocamlbuild/fda.ml" 71 2483 2503
type(
  unit
)
"ocamlbuild/fda.ml" 67 2300 2315 "ocamlbuild/fda.ml" 71 2483 2503
type(
  unit
)
"ocamlbuild/fda.ml" 72 2505 2519 "ocamlbuild/fda.ml" 72 2505 2526
type(
  string
)
"ocamlbuild/fda.ml" 67 2300 2315 "ocamlbuild/fda.ml" 72 2505 2526
type(
  string
)
"ocamlbuild/fda.ml" 64 2210 2220 "ocamlbuild/fda.ml" 72 2505 2527
type(
  string
)
"ocamlbuild/fda.ml" 73 2528 2538 "ocamlbuild/fda.ml" 73 2528 2541
type(
  Hygiene.law
)
ident(
  int_ref law "ocamlbuild/fda.ml" 62 2145 2162 "ocamlbuild/fda.ml" 62 2145 2165
)
"ocamlbuild/fda.ml" 73 2528 2538 "ocamlbuild/fda.ml" 73 2528 2550
type(
  string
)
"ocamlbuild/fda.ml" 63 2176 2184 "ocamlbuild/fda.ml" 73 2528 2550
call(
  stack
)
type(
  unit
)
"ocamlbuild/fda.ml" 74 2552 2560 "ocamlbuild/fda.ml" 74 2552 2569
type(
  (string -> unit) -> string list -> unit
)
ident(
  ext_ref List.iter
)
"ocamlbuild/fda.ml" 75 2570 2590 "ocamlbuild/fda.ml" 75 2570 2593
type(
  string
)
ident(
  def msg "ocamlbuild/fda.ml" 76 2597 2609 "ocamlbuild/fda.ml" 76 2597 2635
)
"ocamlbuild/fda.ml" 76 2597 2609 "ocamlbuild/fda.ml" 76 2597 2622
type(
  (string -> unit, out_channel, unit) format -> string -> unit
)
ident(
  ext_ref Printf.printf
)
"ocamlbuild/fda.ml" 76 2597 2623 "ocamlbuild/fda.ml" 76 2597 2631
type(
  (string -> unit, out_channel, unit) format
)
"ocamlbuild/fda.ml" 76 2597 2632 "ocamlbuild/fda.ml" 76 2597 2635
type(
  string
)
ident(
  int_ref msg "ocamlbuild/fda.ml" 75 2570 2590 "ocamlbuild/fda.ml" 75 2570 2593
)
"ocamlbuild/fda.ml" 76 2597 2609 "ocamlbuild/fda.ml" 76 2597 2635
call(
  tail
)
type(
  unit
)
"ocamlbuild/fda.ml" 75 2570 2580 "ocamlbuild/fda.ml" 77 2636 2649
type(
  string -> unit
)
"ocamlbuild/fda.ml" 78 2650 2660 "ocamlbuild/fda.ml" 78 2650 2664
type(
  string list
)
ident(
  int_ref msgs "ocamlbuild/fda.ml" 62 2145 2167 "ocamlbuild/fda.ml" 62 2145 2171
)
"ocamlbuild/fda.ml" 74 2552 2560 "ocamlbuild/fda.ml" 78 2650 2664
call(
  tail
)
type(
  unit
)
"ocamlbuild/fda.ml" 63 2176 2184 "ocamlbuild/fda.ml" 78 2650 2664
type(
  unit
)
"ocamlbuild/fda.ml" 62 2145 2151 "ocamlbuild/fda.ml" 79 2665 2674
type(
  Hygiene.law * string list -> unit
)
"ocamlbuild/fda.ml" 80 2675 2681 "ocamlbuild/fda.ml" 80 2675 2686
type(
  (Hygiene.law * string list) list
)
ident(
  int_ref stuff "ocamlbuild/fda.ml" 60 2118 2122 "ocamlbuild/fda.ml" 60 2118 2127
)
"ocamlbuild/fda.ml" 61 2131 2135 "ocamlbuild/fda.ml" 80 2675 2686
call(
  stack
)
type(
  unit
)
"ocamlbuild/fda.ml" 81 2688 2695 "ocamlbuild/fda.ml" 81 2688 2696
type(
  bool ref -> bool
)
ident(
  ext_ref Pervasives.( ! )
)
"ocamlbuild/fda.ml" 81 2688 2696 "ocamlbuild/fda.ml" 81 2688 2700
type(
  bool ref
)
ident(
  int_ref evil "ocamlbuild/fda.ml" 48 1854 1860 "ocamlbuild/fda.ml" 48 1854 1864
)
"ocamlbuild/fda.ml" 81 2688 2695 "ocamlbuild/fda.ml" 81 2688 2700
type(
  bool
)
"ocamlbuild/fda.ml" 81 2688 2706 "ocamlbuild/fda.ml" 81 2688 2711
type(
  exn -> unit
)
ident(
  ext_ref Pervasives.raise
)
"ocamlbuild/fda.ml" 81 2688 2712 "ocamlbuild/fda.ml" 81 2688 2731
type(
  exn
)
"ocamlbuild/fda.ml" 81 2688 2706 "ocamlbuild/fda.ml" 81 2688 2731
type(
  unit
)
"ocamlbuild/fda.ml" 81 2688 2692 "ocamlbuild/fda.ml" 81 2688 2732
type(
  unit
)
"ocamlbuild/fda.ml" 61 2131 2135 "ocamlbuild/fda.ml" 81 2688 2732
type(
  unit
)
"ocamlbuild/fda.ml" 49 1880 1882 "ocamlbuild/fda.ml" 81 2688 2732
type(
  unit
)
"ocamlbuild/fda.ml" 48 1854 1856 "ocamlbuild/fda.ml" 81 2688 2732
type(
  unit
)
"ocamlbuild/fda.ml" 47 1819 1821 "ocamlbuild/fda.ml" 81 2688 2732
type(
  unit
)
